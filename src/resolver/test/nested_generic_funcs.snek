let f = { <A> a: A -> # A = NestedTypeParam(0, 0) param index 0, nest level 0
    let g = { <B> b: B -> # B = NestedTypeParam(0, 1) nest level 1
        let aa: A = b # should be type mismatch
        b
    } # Expr is resolved to have type Func { num_type_params: 1, params: vec![TypeParam(0)], return_type: TypeParam(0) } nest levels are stripped off
    (g a)
}

let make_default: { <T> T -> { -> T } } = { <A> a: A ->
    let g: { -> A } = { -> a }
    g
}
let make_2: { -> Number } = (make_default 2)
